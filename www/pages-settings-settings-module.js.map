{"version":3,"sources":["./src/app/pages/settings/settings-routing.module.ts","./src/app/pages/settings/settings.page.html","./src/app/pages/settings/settings.page.scss","./src/app/pages/settings/settings.page.ts","./src/app/pages/settings/settings.module.ts"],"names":[],"mappings":"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","file":"pages-settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","export default \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title>Settings</ion-title>\\n        \\n    \\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-button>\\n            <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n        </ion-button>            \\n    </ion-buttons>          \\n        \\n        \\n    </ion-toolbar>\\n    \\n    \\n    \\n</ion-header>\\n\\n<ion-content>\\n    \\n    \\n<ion-list class=\\\"settings-list\\\">\\n    \\n    <ion-list-header>Support</ion-list-header>  \\n    \\n    <ion-item>\\n        <ion-icon color=\\\"primary\\\" name=\\\"heart\\\" slot=\\\"start\\\" ></ion-icon>\\n        Rate The App\\n        <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"openRate()\\\">Rate</ion-button>\\n  </ion-item>    \\n    \\n    \\n <ion-item>\\n    <ion-icon color=\\\"primary\\\" name=\\\"logo-facebook\\\" slot=\\\"start\\\"></ion-icon>\\n    Follow Us\\n    <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"openFollow()\\\">Follow</ion-button>\\n  </ion-item>  \\n\\n\\n    \\n <ion-item>\\n    <ion-icon color=\\\"primary\\\" name=\\\"mail\\\" slot=\\\"start\\\"></ion-icon>\\n    Contact Support\\n    <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"openEmail()\\\">Email</ion-button>\\n  </ion-item>     \\n    \\n <ion-item>\\n    <ion-icon color=\\\"primary\\\" name=\\\"information-circle\\\" slot=\\\"start\\\"></ion-icon>\\n    Disclaimer\\n    <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"openDisclaimer()\\\">View</ion-button>\\n  </ion-item> \\n\\n    \\n    <ion-list-header>Account</ion-list-header>   \\n    \\n    <ion-item [routerLink]=\\\"['/purchases']\\\" routerDirection=\\\"forward\\\" detail>\\n            <ion-icon color=\\\"primary\\\" name=\\\"wallet\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>My Purchases</ion-label>\\n    </ion-item> \\n    \\n    <ion-item (click)=\\\"openSwitchAccount()\\\" detail>\\n            <ion-icon color=\\\"primary\\\" name=\\\"swap-horizontal\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Switch Account</ion-label>\\n    </ion-item> \\n    \\n    <ion-item (click)=\\\"openChangeEmail()\\\" detail>\\n            <ion-icon color=\\\"primary\\\" name=\\\"at-circle\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Change Email</ion-label>\\n    </ion-item>  \\n    \\n    <ion-item (click)=\\\"openChangePassword()\\\" detail>\\n            <ion-icon color=\\\"primary\\\" name=\\\"lock-open\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Change Password</ion-label>\\n    </ion-item>  \\n\\n\\n     \\n</ion-list>        \\n    \\n    \\n    \\n\\n</ion-content>\\n\";","export default \".settings-list ion-list-header {\\n  margin-bottom: 10px;\\n  margin-top: 20px;\\n  padding-top: 10px;\\n}\\n\\n.settings-list ion-list-header:first-child {\\n  margin-top: 0px;\\n  padding-top: 0px;\\n}\\n\\n.settings-list ion-list-header ion-label {\\n  margin-bottom: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzZXR0aW5ncy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksa0JBQUE7QUFDSiIsImZpbGUiOiJzZXR0aW5ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2V0dGluZ3MtbGlzdCBpb24tbGlzdC1oZWFkZXJ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIHBhZGRpbmctdG9wOjEwcHg7XHJcbn1cclxuXHJcbi5zZXR0aW5ncy1saXN0IGlvbi1saXN0LWhlYWRlcjpmaXJzdC1jaGlsZHtcclxuICAgIG1hcmdpbi10b3A6MHB4O1xyXG4gICAgcGFkZGluZy10b3A6MHB4O1xyXG59XHJcblxyXG4uc2V0dGluZ3MtbGlzdCBpb24tbGlzdC1oZWFkZXIgaW9uLWxhYmVse1xyXG4gICAgbWFyZ2luLWJvdHRvbTowcHg7XHJcbn1cclxuXHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\nimport { LoadingController,AlertController,ModalController,NavController, Platform } from '@ionic/angular';\n\nimport { AccountService } from '../../services/account/account.service';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.page.html',\n    styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n    public user:any;\n    \n    constructor(public plt: Platform, private accountService: AccountService, \n        private alertCtrl: AlertController, private iab: InAppBrowser) {\n        \n        this.user = {};\n        this.accountService.getUserData().subscribe((value) => {\n            this.user = value;\n            \n        });\n    }\n\n    ngOnInit() {\n    }\n    public openRate(){\n        \n        if (this.plt.is(\"ios\")){\n            this.iab.create(\"https://apps.apple.com/us/app/\", '_system');\n        }\n        else{\n            this.iab.create(\"https://play.google.com/store/apps/details?id=com.healthandsafetystories.app\", '_system');\n        }\n        \n        \n    }\n    public openFollow(){\n        let link = 'https://www.facebook.com/Whanauora-599348520177935/';\n        this.iab.create(link, '_system');        \n    }\n    \n   \n    \n    public openEmail(){\n        this.iab.create(\"mailto:tekotukubusiness@gmail.com\", '_system');\n    }\n    \n    \n    public openDisclaimer(){\n        let alert = this.alertCtrl.create({\n            header: 'Disclaimer',\n            message: 'The publisher would like to inform the reader that the safety information contained in the Te Kōtuku Apps is for education purposes only and intended for children who live in New Zealand. Please consult a health professional to see if the safety information in these apps are correct for you and your child.',\n            buttons: [\n                {\n                    text: 'Close',\n                    role: 'cancel',\n                    handler: data => {\n                    }\n                }    \n            ]\n        }).then((el) => {\n            el.present();\n        });         \n    }\n\n    \n    public openChangePassword(){\n        let alert = this.alertCtrl.create({\n            header: 'Change Password',\n            inputs: [           \n                {\n                    name: 'password',\n                    placeholder: 'Password',\n                    type: 'password'\n                },\n                {\n                    name: 'confirmPassword',\n                    placeholder: 'Confirm Password',\n                    type: 'password'\n                }\n            ],\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: data => {\n                    }\n                },\n                {\n                    text: 'Change',\n                    handler: data => {\n                        \n                        if (data.password && data.confirmPassword && data.password === data.confirmPassword){\n\n                            \n                            this.accountService.changePassword(this.user.email, data.password, data.confirmPassword).then(() => {\n                                let alert = this.alertCtrl.create({\n                                    header: 'Success',\n                                    message: 'Your password has been updated',\n                                    buttons: [\n                                        {\n                                            text: 'Dismiss',\n                                            role: 'cancel',\n                                            handler: data => {\n                                            }\n                                        }                              \n                                    ]           \n                                }).then((el) => {\n                                    el.present();\n                                });                                 \n                            }).catch(() => {\n                                let alert = this.alertCtrl.create({\n                                    header: 'Error',\n                                    message: 'There was an error while changing your password.',\n                                    buttons: [\n                                        {\n                                            text: 'Cancel',\n                                            role: 'cancel',\n                                            handler: data => {\n                                            }\n                                        },\n                                         {\n                                            text: 'Try Again',\n                                            handler: data => {\n                                                setTimeout(() => {this.openChangePassword()},200);\n                                            }\n                                        }                               \n                                    ]            \n                                }).then((el) => {\n                                    el.present();\n                                });                                \n                            });\n                        }\n                        \n                        else{\n                            let alert = this.alertCtrl.create({\n                                header: 'Error',\n                                message: 'Passwords do not match',\n                                buttons: [\n                                    {\n                                        text: 'Cancel',\n                                        role: 'cancel',\n                                        handler: data => {\n                                        }\n                                    },\n                                     {\n                                        text: 'Try Again',\n                                        handler: data => {\n                                            setTimeout(() => {this.openChangePassword()},200);\n                                        }\n                                    }                               \n                                ]            \n                            }).then((el) => {\n                                    el.present();\n                                });                              \n                        }\n    \n                    }\n                }\n                \n            ]\n        }).then((el) => {\n            el.present();\n        });          \n    }\n    \n    \n    public openChangeEmail(){\n        let alert = this.alertCtrl.create({\n            header: 'Change Email',\n            message: 'Your current email is: ' + this.user.email,\n            inputs: [           \n                {\n                    name: 'email',\n                    placeholder: 'New Email',\n                    type: 'email'\n                },\n                {\n                    name: 'confirmEmail',\n                    placeholder: 'Confirm Email',\n                    type: 'email'\n                }\n            ],\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: data => {\n                    }\n                },\n                {\n                    text: 'Change',\n                    handler: data => {\n                        \n                        if (data.email && data.confirmEmail && data.email === data.confirmEmail){\n\n                            \n                            this.accountService.changeEmail(data.email).then(() => {\n                                let alert = this.alertCtrl.create({\n                                    header: 'Success',\n                                    message: 'Your email has been updated',\n                                    buttons: [\n                                        {\n                                            text: 'Dismiss',\n                                            role: 'cancel',\n                                            handler: data => {\n                                            }\n                                        }                              \n                                    ]           \n                                }).then((el) => {\n                                    el.present();\n                                });    \n                                \n                                this.accountService.retreiveUserData().then((data) => {\n                                    this.user = data;\n                                })\n                                \n                                                             \n                            }).catch(() => {\n                                let alert = this.alertCtrl.create({\n                                    header: 'Error',\n                                    message: 'There was an error while changing your email.',\n                                    buttons: [\n                                        {\n                                            text: 'Cancel',\n                                            role: 'cancel',\n                                            handler: data => {\n                                            }\n                                        },\n                                         {\n                                            text: 'Try Again',\n                                            handler: data => {\n                                                setTimeout(() => {this.openChangeEmail()},200);\n                                            }\n                                        }                               \n                                    ]            \n                                }).then((el) => {\n                                    el.present();\n                                });                                \n                            });\n                        }\n                        \n                        else{\n                            let alert = this.alertCtrl.create({\n                                header: 'Error',\n                                message: 'Emails do not match',\n                                buttons: [\n                                    {\n                                        text: 'Cancel',\n                                        role: 'cancel',\n                                        handler: data => {\n                                        }\n                                    },\n                                     {\n                                        text: 'Try Again',\n                                        handler: data => {\n                                            setTimeout(() => {this.openChangeEmail()},200);\n                                        }\n                                    }                               \n                                ]            \n                            }).then((el) => {\n                                    el.present();\n                                });                              \n                        }\n    \n                    }\n                }\n                \n            ]\n        }).then((el) => {\n            el.present();\n        });          \n    }\n    \n    \n    public openSwitchAccount(){\n        let alert = this.alertCtrl.create({\n            header: 'Swtich Accounts',\n            inputs: [           \n                {\n                    name: 'email',\n                    placeholder: 'Email',\n                    type: 'email'\n                },\n                {\n                    name: 'password',\n                    placeholder: 'Password',\n                    type: 'password'\n                }\n            ],\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: data => {\n                    }\n                },\n                {\n                    text: 'Login',\n                    handler: data => {\n                        \n                        if (data.email && data.password){\n\n                         \n                            this.accountService.login({email:this.user.email, password:data.password}).then(() => {\n                                let alert = this.alertCtrl.create({\n                                    header: 'Success',\n                                    message: 'You have switched accounts.',\n                                    buttons: [\n                                        {\n                                            text: 'Dismiss',\n                                            role: 'cancel',\n                                            handler: data => {\n                                            }\n                                        }                              \n                                    ]           \n                                }).then((el) => {\n                                    el.present();\n                                });                                 \n                            }).catch(() => {\n                                let alert = this.alertCtrl.create({\n                                    header: 'Error',\n                                    message: 'There was an error while logging in.',\n                                    buttons: [\n                                        {\n                                            text: 'Cancel',\n                                            role: 'cancel',\n                                            handler: data => {\n                                            }\n                                        },\n                                         {\n                                            text: 'Try Again',\n                                            handler: data => {\n                                                setTimeout(() => {this.openSwitchAccount()},200);\n                                            }\n                                        }                               \n                                    ]            \n                                }).then((el) => {\n                                    el.present();\n                                });                                \n                            });\n                        }\n                        \n                        else{\n                            let alert = this.alertCtrl.create({\n                                header: 'Error',\n                                message: 'Emails do not match',\n                                buttons: [\n                                    {\n                                        text: 'Cancel',\n                                        role: 'cancel',\n                                        handler: data => {\n                                        }\n                                    },\n                                     {\n                                        text: 'Try Again',\n                                        handler: data => {\n                                            setTimeout(() => {this.openSwitchAccount()},200);\n                                        }\n                                    }                               \n                                ]            \n                            }).then((el) => {\n                                    el.present();\n                                });                              \n                        }\n    \n                    }\n                }\n                \n            ]\n        }).then((el) => {\n            el.present();\n        });          \n    }\n    \n    \n            \n    public logout(){\n        this.accountService.logout();\n      \n    } \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n"],"sourceRoot":"webpack:///"}