{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","state","container","element","attachComponent","delegate","assert","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","registerInstance","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","gesture","enable","swipeGesture","root","setRoot","rootParams","document","querySelector","el","closest","mode","getIonMode","config","getBoolean","emit","rootChanged","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","swipeGestureChanged","lifecycle","LIFECYCLE_WILL_UNLOAD","_destroy","destroy","opts","done","queueTrns","insertStart","insertViews","insertIndex","insertComponents","removeStart","removeCount","indexOrViewCtrl","tiConfig","removeView","startIndex","setPages","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","popTo","assign","animationBuilder","push","tagName","index","canGoBackSync","getPreviousSync","indexOf","ti","skipIfBusy","reject","router","canTransition","nextTrns","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","init","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","success","failed","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","getTimeGivenProgression","progressEnd","h","getElement","style","navLink","routerDirection","routerAnimation","pop","NavLink","onClick","Host"],"mappings":"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","file":"21.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\nimport { b as getIonMode, c as config } from './ionic-global-63a97a32.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { l as assert } from './helpers-dd7e4b7b.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-c3ff7f2e.js';\nimport { a as attachComponent } from './framework-delegate-4392cd63.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  const currentParams = view.params;\n  if (currentParams === params) {\n    return true;\n  }\n  if (!currentParams && !params) {\n    return true;\n  }\n  if (!currentParams || !params) {\n    return false;\n  }\n  const keysA = Object.keys(currentParams);\n  const keysB = Object.keys(params);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  // Test for A's keys different from B.\n  for (const key of keysA) {\n    if (currentParams[key] !== params[key]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages.map(page => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter =\n      !!document.querySelector('ion-router') &&\n        !this.el.closest('[no-router]');\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-ee838cf8.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    // release swipe back gesture and transition\n    this.transInstr.length = this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: -1,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts\n    }, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const tiConfig = {\n      removeStart: -1,\n      removeCount: -1,\n      opts\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      tiConfig.removeView = indexOrViewCtrl;\n      tiConfig.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      tiConfig.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(tiConfig, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.queueTrns({\n      removeStart: 1,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    if (opts == null) {\n      opts = {};\n    }\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /** @internal */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element\n      });\n    }\n    let resolve;\n    const promise = new Promise(r => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: enteringEl => {\n        let mark;\n        const p = new Promise(r => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          }\n        });\n        return p;\n      }\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      const viewController = this.views.find(v => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /** @internal */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    return active\n      ? {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element\n      }\n      : undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  getActive() {\n    return Promise.resolve(this.getActiveSync());\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  getByIndex(index) {\n    return Promise.resolve(this.views[index]);\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  canGoBack(view) {\n    return Promise.resolve(this.canGoBackSync(view));\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  getPrevious(view) {\n    return Promise.resolve(this.getPreviousSync(view));\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n  // 1. _nextTrns(): consumes the next transition in the queue\n  // 2. _viewInit(): initializes enteringView if required\n  // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n  // 4. _postViewInit(): add/remove the views from the navigation stack\n  // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n  // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n  // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n  // 8. _transitionFinish(): called once the transition finishes\n  // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n  async queueTrns(ti, done) {\n    if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n      return Promise.resolve(false);\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return Promise.resolve(false);\n        }\n        else if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return Promise.resolve(false);\n        }\n      }\n    }\n    // Normalize empty\n    if (ti.insertViews && ti.insertViews.length === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now\n    // get the next instruction\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n        enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      const result = requiresTransition\n        ? await this.transition(enteringView, leavingView, ti)\n        : {\n          // transition is not required, so we are already done!\n          // they're inserting/removing the views somewhere in the middle or\n          // beginning, so visually nothing needs to animate/transition\n          // resolve immediately because there's no animation that's happening\n          hasCompleted: true,\n          requiresTransition: false\n        };\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    const viewsLength = this.views.length;\n    ti.opts = ti.opts || {};\n    if (ti.opts.delegate === undefined) {\n      ti.opts.delegate = this.delegate;\n    }\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition =\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  getEnteringView(ti, leavingView) {\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      // grab the very last view of the views to be inserted\n      // and initialize it as the new entering view\n      return insertViews[insertViews.length - 1];\n    }\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  postViewInit(enteringView, leavingView, ti) {\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    const opts = ti.opts;\n    const insertViews = ti.insertViews;\n    const removeStart = ti.removeStart;\n    const removeCount = ti.removeCount;\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = 0; i < removeCount; i++) {\n        const view = this.views[i + removeStart];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      opts.direction = opts.direction || 'back';\n    }\n    const finalBalance = this.views.length +\n      (insertViews !== undefined ? insertViews.length : 0) -\n      (removeCount !== undefined ? removeCount : 0);\n    assert(finalBalance >= 0, 'final balance can not be negative');\n    if (finalBalance === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // there are views to insert\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        opts.direction = opts.direction || 'forward';\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => this.sbAni = ani\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts);\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction\n    };\n  }\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      // this view is already in the stack!!\n      // move it to its new location\n      assert(view.nav === this, 'view is not part of the nav');\n      views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      // insert the entering view into the correct index in the stack\n      views.splice(index, 0, view);\n    }\n  }\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts: {\n        direction: 'back',\n        progressAnimation: true\n      }\n    }, undefined);\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return (h(\"slot\", null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return (h(Host, { onClick: this.onClick }));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"sourceRoot":"webpack:///"}